<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:common="clr-namespace:CuisineCompanion.Common"
    xmlns:helper="clr-namespace:CuisineCompanion.Helper"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style TargetType="TextBlock" x:Key="TitleText">
        <Setter Property="FontSize" Value="36" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#FFFFFF" />
    </Style>


    <Style TargetType="TextBlock" x:Key="NormalText">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="LineHeight" Value="28" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#FFFFFF" />
    </Style>

    <Style TargetType="TextBlock" x:Key="TextTitleStyle">
        <Setter Property="Margin" Value="10,0" />
        <Setter Property="FontSize" Value="17" />
        <Setter Property="Foreground" Value="#6E7272" />
    </Style>
    <Style TargetType="TextBlock" x:Key="TextTitle2Style">
        <Setter Property="Margin" Value="5,0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="#7A7E7E" />
    </Style>

    <Style TargetType="TextBlock" x:Key="Text1Style">
        <Setter Property="Margin" Value="0,10" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="Foreground" Value="#12937c" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>


    <Style TargetType="Button" x:Key="Button">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Width" Value="170" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#FDFEFE" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="White"
                        BorderThickness="1"
                        CornerRadius="25"
                        Padding="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#e8e8e8" />
                <Setter Property="Foreground" Value="DimGray" />
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="#d9d9d9" />
                <Setter Property="Foreground" Value="DimGray" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ToggleButton" x:Key="ToggleButtonJust">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="8,0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="Transparent"
                        CornerRadius="10"
                        Padding="10">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#d9d9d9" />
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="#979797" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="ButtonJust">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="8,0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="Transparent"
                        CornerRadius="10"
                        Padding="7">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#d9d9d9" />
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="#979797" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="Button" x:Key="ButtonCircle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="8,0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="#878787"
                        BorderThickness="1"
                        CornerRadius="30"
                        Padding="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#d9d9d9" />
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="#979797" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type Button}" x:Key="LargeButton">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="0,20,0,0" />
        <Setter Property="Width" Value="200" />
        <Setter Property="Background" Value="#3AB19B" />
        <Setter Property="Foreground" Value="#FDFEFE" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="#49B7A3"
                        BorderThickness="1"
                        CornerRadius="25"
                        Padding="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#339685" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="#2d7a6c" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="NoErrorStyle">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter x:Key="BaseConverter" />
                    </ControlTemplate.Resources>
                    <Border BorderBrush="{x:Null}" Visibility="{Binding ElementName=placeholder, Mode=OneWay, Path=AdornedElement.IsVisible, Converter={StaticResource BaseConverter}}">
                        <AdornedElementPlaceholder x:Name="placeholder" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        BasedOn="{StaticResource NoErrorStyle}"
        TargetType="Control"
        x:Key="NoBorderBoxStyle">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="#878787" />
    </Style>


    <Style
        BasedOn="{StaticResource NoBorderBoxStyle}"
        TargetType="TextBox"
        x:Key="DraggableNumericDecimalTextBoxStyle">
        <Setter Property="Foreground" Value="Gray" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Teal" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        BasedOn="{StaticResource NoErrorStyle}"
        TargetType="ComboBox"
        x:Key="ComboBoxStyle">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="#ACB0AF" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="35,0" />
        <Setter Property="Padding" Value="0,10" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style
        BasedOn="{StaticResource NoErrorStyle}"
        TargetType="Border"
        x:Key="Body">
        <Setter Property="Background" Value="Azure" />
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="MinHeight" Value="80" />
        <Setter Property="Width" Value="450" />
        <Setter Property="Margin" Value="0,10" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#919D9D" />
    </Style>

    <Style TargetType="TextBlock" x:Key="Title">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="10,24,10,0" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Foreground" Value="#4A4A4A" />
    </Style>

    <Style TargetType="common:TipTextBox" x:Key="Input">
        <Setter Property="BorderBrush" Value="#ACB0AF" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="10" />
    </Style>

    <Style TargetType="Border" x:Key="CardBorerStyle">
        <Setter Property="Background" Value="{x:Static helper:ColorHelper.O}" />
        <Setter Property="BorderBrush" Value="#999" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="CornerRadius" Value="10" />
    </Style>

    <Style TargetType="TextBlock" x:Key="CardTitleStyle">
        <Setter Property="Margin" Value="6,3,0,0" />
        <Setter Property="Foreground" Value="#0073BE" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Padding" Value="3,2" />
    </Style>

    <Style
        BasedOn="{StaticResource CardTitleStyle}"
        TargetType="TextBlock"
        x:Key="CardTextStyle">
        <Setter Property="Margin" Value="12,0,0,0" />
        <Setter Property="Padding" Value="3,3,3,0" />
        <Setter Property="Foreground" Value="#7000BE" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style
        BasedOn="{StaticResource CardTitleStyle}"
        TargetType="TextBlock"
        x:Key="CardTipStyle">
        <Setter Property="Margin" Value="0,0,12,2" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Foreground" Value="#0707BE" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>

    <Style TargetType="Slider" x:Key="CustomSliderStyle">
        <Setter Property="Height" Value="{Binding ActualHeight, ElementName=grid1}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="Minimum" Value="0" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="common:CornerRadiusImage" x:Key="CornerRadiusImageStyle">
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="Height" Value="200" />
        <Setter Property="Width" Value="200" />
        <Setter Property="Stretch" Value="UniformToFill" />
    </Style>

    <Style TargetType="ItemsControl" x:Key="HorizontalStackPanelItemsPanelStyle">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="ItemsControl" x:Key="VerticalStackPanelItemsPanelStyle">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>